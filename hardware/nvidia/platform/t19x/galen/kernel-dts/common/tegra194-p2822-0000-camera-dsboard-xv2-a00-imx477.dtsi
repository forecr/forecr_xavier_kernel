/*
 * Copyright (c) 2015-2018, NVIDIA CORPORATION.  All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
#include "tegra194-camera-dsboard-xv2-a00-imx477.dtsi"
#include "dt-bindings/clock/tegra194-clock.h"

#define CAMERA_I2C_MUX_BUS(x) (0x1E + x)

/ {

	i2c@3180000 {
		tca9548_70: tca9548@70 {
			status = "okay";
			compatible = "nxp,pca9548";
			reg = <0x70>;
			#address-cells = <1>;
			#size-cells = <0>;
			vcc-supply = <&p2822_vdd_1v8_cvb>;
			skip_mux_detect;
			force_bus_start = <CAMERA_I2C_MUX_BUS(0)>;
			i2c@0 {
				reg = <0>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				imx477_a@1a {
					reset-gpios = <&tca6408_38 0 GPIO_ACTIVE_HIGH>;
				};
			};

			i2c@1 {
				reg = <1>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				imx477_b@1a {
					reset-gpios = <&tca6408_38 1 GPIO_ACTIVE_HIGH>;
				};
			};

			i2c@2 {
				reg = <2>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				imx477_c@1a {
					reset-gpios = <&tca6408_38 2 GPIO_ACTIVE_HIGH>;
				};
			};

			i2c@3 {
				reg = <3>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				imx477_d@1a {
					reset-gpios = <&tca6408_38 3 GPIO_ACTIVE_HIGH>;
				};
			};
			i2c@4 {
				reg = <4>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				imx477_e@1a {
					reset-gpios = <&tca6408_38 4 GPIO_ACTIVE_HIGH>;
				};
			};
			i2c@5 {
				reg = <5>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				imx477_g@1a {
					reset-gpios = <&tca6408_38 5 GPIO_ACTIVE_HIGH>;
				};
			};


			i2c@6 {
				reg = <6>;
				i2c-mux,deselect-on-exit;
				#address-cells = <1>;
				#size-cells = <0>;
				tca6408_38: tca6408@38 {
					compatible = "nxp,pcf8574a";
					reg = <0x38>;
					gpio-controller;
					#gpio-cells = <2>;
					tca6408_38_outlow {
						/*
						 * GPIO-0 : PWDN_CAM0
						 * GPIO-1 : PWDN_CAM1
						 * GPIO-2 : PWDN_CAM2
						 * GPIO-3 : PWDN_CAM3
						 * GPIO-4 : PWDN_CAM4
						 * GPIO-5 : PWDN_CAM5
						 * GPIO-6 : 
						 * GPIO-7 : 
						 */
						gpio-hog;
						gpios = <0 0 1 0 2 0 3 0 4 0 5 0 6 0 7 0>;
						output-low;
						label = "tca6408_38_outlow_0",
							"tca6408_38_outlow_1",
							"tca6408_38_outlow_2",
							"tca6408_38_outlow_3",
							"tca6408_38_outlow_4",
							"tca6408_38_outlow_5",
							"tca6408_38_outlow_6",
							"tca6408_38_outlow_7";
					};
				};
			};
		};
	};
};
